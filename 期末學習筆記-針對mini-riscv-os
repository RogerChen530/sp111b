本學習筆記為本學期之學習結果，為學生本人自己寫作
主要參考、參閱專案為：mini-riscv-os -- 嵌入式作業系統(https://github.com/cccriscv/mini-riscv-os)


探索 Mini RISC-V 操作系統

Mini RISC-V 是一個輕量級的 RISC-V（Reduced Instruction Set Computer - V）處理器架構
它提供了一個理想的平台來學習操作系統的基本概念和實作。
這份學習筆記是我這學期探討 Mini RISC-V 操作系統所得的相關知識。

一、介紹 Mini RISC-V

Mini RISC-V 是一個基於 RISC-V 指令集架構的簡化處理器實現，旨在提供一個易於理解和學習的平台。
它遵循 RISC-V 的基本設計原則，包括固定大小的指令格式、精簡的指令集和統一的暫存器組。
透過學習 Mini RISC-V，可以深入了解處理器架構和指令集的基礎概念。

二、搭建 Mini RISC-V 開發環境

1.安裝 Mini RISC-V 模擬器：
  首先，我們需要安裝一個支援 Mini RISC-V 的模擬器
  例如 Spike 或 QEMU。這些模擬器可以模擬運行 Mini RISC-V 指令，並提供調試和分析的功能。
2.編譯 Mini RISC-V 工具鏈：
  為了開發和執行 Mini RISC-V 程序
  我們需要編譯 Mini RISC-V 工具鏈。這包括編譯器（如 GCC）、彙編器和連結器等工具
  用於將我們的原始碼轉換成可執行的 Mini RISC-V 程序。
  
三、瞭解 Mini RISC-V 指令集架構

1.Mini RISC-V 指令格式：
  Mini RISC-V 使用固定大小的指令格式
  包括 32 位元的指令。這些指令可以分為幾個類別，如算術指令、載入和存儲指令、分支和跳躍指令等。
2.Mini RISC-V 暫存器組：
  Mini RISC-V 使用統一的暫存器組
  其中包含幾個通用暫存器和一些特殊暫存器。這些暫存器用於存儲和處理數據，並在指令之間進行通信。
  
四、實作 Mini RISC-V 操作系統

1.啟動 Mini RISC-V 系統：
  為了實作一個 Mini RISC-V 操作系統
  我們需要首先瞭解如何啟動 Mini RISC-V 系統並進入操作系統的執行環境。
  這包括了設置處理器的初始狀態、加載操作系統鏡像等。
2.處理器管理：
  實作操作系統需要處理器管理的相關功能，
  例如進程管理、內存管理和中斷處理。
  我們需要設計和實現這些功能，以確保操作系統的正常運行。
3.系統調用和服務：
  操作系統提供了一個應用程序接口（API），使應用程序能夠訪問底層系統資源。
  我們需要實作系統調用和服務，以便應用程序可以透過它們與操作系統進行通信。

五、優化 Mini RISC-V 操作系統

1.效能優化：
  優化操作系統的效能是一個重要的目標。
  這包括減少指令的執行時間、優化記憶體存取和提高系統的吞吐量。
  我們可以使用一些技術，如緩存優化、指令重排和多線程處理等，來改善操作系統的效能。
2.資源管理：
  操作系統需要有效地管理系統資源，如記憶體、處理器和外部設備等。
  我們可以使用一些策略和演算法，如分頁和虛擬記憶體管理、作業排程和存儲管理等，來實現資源管理的最佳實踐。
  
結論：
Mini RISC-V 操作系統提供了一個理想的學習平台，讓我們深入了解操作系統的核心概念和實作細節。
透過學習 Mini RISC-V，我們可以學會搭建開發環境、瞭解指令集架構、實作操作系統以及優化系統效能。
